cmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)

# XXX: DynASM flags are set considering the target arch
include(SetDynASMFlags)

if(HOST_CC)
  set(CMAKE_C_COMPILER ${HOST_CC})
endif()

append_flags(CMAKE_C_FLAGS ${HOST_CFLAGS})
# TODO: fix other flags

# --- Build minilua ------------------------------------------------------------

# If left blank, minilua is built and used. You can supply an installed
# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua.
if(NOT HOST_LUA)
  set(MINILUA minilua)
  add_executable(${MINILUA} minilua.c)
  target_link_libraries(${MINILUA} m)
  set(HOST_LUA $<TARGET_FILE:${MINILUA}>)
else()
  separate_arguments(HOST_LUA UNIX_COMMAND ${HOST_LUA})
endif()

# --- Prepare dasm-ed VM description -------------------------------------------

set(DYNASM_DIR ${PROJECT_SOURCE_DIR}/dynasm)
set(DYNASM_DASC "${LUAJIT_SOURCE_DIR}/vm_${DYNASM_ARCH}.dasc")
set(DYNASM ${HOST_LUA} ${DYNASM_DIR}/dynasm.lua)

add_custom_command(
  COMMENT "Generating buildvm_arch.h"
  OUTPUT buildvm_arch.h
  COMMAND ${DYNASM} ${DYNASM_FLAGS} -o buildvm_arch.h ${DYNASM_DASC}
  DEPENDS ${MINILUA} ${DYNASM_DASC} ${DYNASM_DIR}/*.lua
)

# --- Build buildvm ------------------------------------------------------------

add_executable(buildvm EXCLUDE_FROM_ALL
  buildvm.c
  # XXX: Unfortunately CMake is a crap. I failed to specify autogenerated
  # host/buildvm_arch.h as a dependency to host/buildvm.c, so I simply
  # explicitly mentioned it in this list.
  buildvm_arch.h
  buildvm_asm.c
  buildvm_fold.c
  buildvm_lib.c
  buildvm_peobj.c
)
set_source_files_properties(buildvm.c PROPERTIES
  OBJECT_DEPENDS ${DYNASM_DIR}/dasm_*.h
)
set_target_properties(buildvm PROPERTIES
  COMPILE_FLAGS "${HOST_C_FLAGS}"
)
target_include_directories(buildvm PRIVATE
  ${LUAJIT_BINARY_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
)
